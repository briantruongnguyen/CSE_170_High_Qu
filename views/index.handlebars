    <html>
    <head>
      <meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>
      <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1.0"/>
      <title>HighQu</title>


<!-- Google Analytics Content Experiment code -->

<script>function utmx_section(){}function utmx(){}(function(){var
k='141982473-0',d=document,l=d.location,c=d.cookie;
if(l.search.indexOf('utm_expid='+k)>0)return;
function f(n){if(c){var i=c.indexOf(n+'=');if(i>-1){var j=c.
indexOf(';',i);return escape(c.substring(i+n.length+1,j<0?c.
length:j))}}}var x=f('__utmx'),xx=f('__utmxx'),h=l.hash;d.write(
'<sc'+'ript src="'+'http'+(l.protocol=='https:'?'s://ssl':
'://www')+'.google-analytics.com/ga_exp.js?'+'utmxkey='+k+
'&utmx='+(x?x:'')+'&utmxx='+(xx?xx:'')+'&utmxtime='+new Date().
valueOf()+(h?'&utmxhash='+escape(h.substr(1)):'')+
'" type="text/javascript" charset="utf-8"><\/sc'+'ript>')})();
</script><script>utmx('url','A/B'); </script>

<!-- End of Google Analytics Content Experiment code -->



      <!-- CSS  -->
      <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
      <link href="/css/materialize.css" type="text/css" rel="stylesheet" media="screen,projection"/>
      <link href="/css/style.css" type="text/css" rel="stylesheet" media="screen,projection"/>

      <style>
        #map {
          height: 91.5%;
          position:relative;
        }
        #map2 {
          height: 60%;
          width: 100%;
          position:relative;
        }
        #contactform{
          z-index:5;
          position:absolute;
          width: 80%;
          top: 20%;
          left: 10%;
        }
        #addbutton{
          top: 85%;
          left: 5%;
          z-index:6;
          position:absolute;
        }
        #hamburger{
          left: -8%;
        }

        #trailinfo, #trailinfocontent {
          min-height: 90%;
          min-width: 100%;
        }
        #loginmodal, #logincontent {
          min-height: 100%;
          min-width: 100%;
        }
        
        #registermodal, #registercontent {
          min-height: 100%;
          min-width: 100%;
        }
        
        
        #brandingmodal {
          min-height: 100%;
          min-width: 100%;
        }
        html, body {
          height: 100%;
          margin: 0;
          padding: 0;
          z-index: 0;
        }
        .slideshow-container {
          max-width: 1000px;
          position: relative;
          margin: auto;
        }

        .mySlides {
            display: none;
        }

        /* Next & previous buttons */
        .prev, .next {
          cursor: pointer;
          position: absolute;
          top: 50%;
          width: auto;
          margin-top: -22px;
          padding: 16px;
          color: white;
          font-weight: bold;
          font-size: 18px;
          transition: 0.6s ease;
          border-radius: 0 3px 3px 0;
        }

        /* Position the "next button" to the right */
        .next {
          right: 0;
          border-radius: 3px 0 0 3px;
        }

        /* On hover, add a black background color with a little bit see-through */
        .prev:hover, .next:hover {
          background-color: rgba(0,0,0,0.8);
        }

        /* Caption text */ 
        .text {
          color: #f2f2f2;
          font-size: 30px;
          padding: 8px 12px;
          position: absolute;
          bottom: 15px;
          width: 100%;
          text-align: center;
        }

        /* Number text (1/3 etc) */
        .numbertext {
          color: #f2f2f2;
          font-size: 12px;
          padding: 8px 12px;
          position: absolute;
          top: 0;
        }

        /* The dots/bullets/indicators */
        .dot {
          cursor:pointer;
          height: 13px;
          width: 13px;
          margin: 0 2px;
          background-color: #bbb;
          border-radius: 50%;
          display: inline-block;
          transition: background-color 0.6s ease;
        }

        .active, .dot:hover {
          background-color: #717171;
        }

        /* Fading animation */
        .fade {
          -webkit-animation-name: fade;
          -webkit-animation-duration: 1.5s;
          animation-name: fade;
          animation-duration: 1.5s;
        }
      </style>
    </head>




    <body>
      <nav class="light-green lighten-1" role="navigation">
        <div class="nav-wrapper container"><a id="logo-container" href="#" class="brand-logo">Explore a Trail</a>


          <ul id="nav-mobile" class="side-nav show-on-large">
            <nav class="light-green lighten-1" role="navigation">
              <div class="nav-wrapper container">
               <a id="logo-container" href="#" class="brand-logo" style="color: white; font-size: 20px">High-Qu</a> 
             </div>
           </nav>
           <li><div class="userView">

            <div class="background">
              <img style="width:100%;" src="/img/materialize-bg.jpg">
            </div>
            <div class="row">

             <div class="col s8">
               <h5 id="profile_user_name" class="white-text"></h5>
             </div> 
           </div>
           <div class="divider"></div>

           <!-- TODO  -->
           <h6 class="white-text">123 Trails Hiked</h6>
           <h6 class="white-text">75 Reviews</h6>
           <h6 class="white-text">69 Photos</h6>
           <br>


           <!-- Menu Page --> 
         </div></li>
         <li><a class="waves-effect" href="/">Explore Trails</a></li>
         <li><a class="waves-effect" href="hikehistory">My Explore History</a></li>
         <li><a class="waves-effect" href="mytrails">My Created Trails</a></li>
         <li><a class="waves-effect" href="favs">Favorites</a></li>
         <li><a class="waves-effect" href="profile">Profile</a></li>
<!--
<li><a class="waves-effect" href="help">Help</a></li>
<li><a class="waves-effect" href="settings">Settings</a></li>
-->
<li><a id="logout" class="waves-effect">Logout</a></li>

</ul>
<a  href="#" id="hamburger" data-activates="nav-mobile" class="button-collapse show-on-large">
  <i  class="material-icons">menu</i>
</a>
</div>
</nav>


<div class ="container" id ="contactform">
 <div class="input-field" style="background-color:white;">
  <input id="search" class="controls tooltipped" type="search" data-tooltip="Not interested in anything around you? Search trails elsewhere!" placeholder="Enter a Location">
  <label class="label-icon" for="search"><i class="material-icons">search</i></label>
  <i id = "searchbarx" class="material-icons">close</i>
</div>
</div>

<a id="addbutton" class="btn-large waves-effect waves-light red ">Record a Trail</a>


<div id="map"></div>



<!-- Modal Structure -->
<div id="modalstart" class="modal modal-fixed-footer">
  <div class="modal-content">
    <h4>Start Recording</h4>
    <p>User Agreement: Please watch where you are going, as not looking around can cause injury or death. We want you to have fun, not die. Thanks.</p>
  </div>
  <div class="modal-footer">
    <a href="#!" id="disagree" class="modal-action modal-close waves-effect waves-red btn-flat ">Disagree</a>
    <a href="addTrail" class="modal-action modal-close waves-effect waves-green btn-flat ">Agree</a>
  </div>
</div>

<!-- Modal Structure -->
<div id="trailinfo" class="modal bottom-sheet">
  <div id="trailinfocontent" class="modal-content">
    <h4 id="trailname">Modal Header</h4>
    <div id="map2"></div>

    <b>Description: </b><p id="traildescription">A bunch of text</p>
    <b>Difficulty: </b><p id="traildifficulty">A bunch of text</p>
    <b>Reviews </b><br>


    <ul id="reviews" class="collection">

    </ul>


  </div>
  <div class="modal-footer">
    <a href="#!" class=" modal-action modal-close waves-effect waves-green btn-flat">Close</a>

    <a id = "HikeTrailButton" href="#!" class=" modal-action modal-close waves-effect waves-green btn-flat">Hike It!</a>
    <a href="#!" class=" modal-action waves-effect waves-green btn-flat" id = "favoriting_the_trail">Favorite</a>
  </div>


</div>


<!-- Modal Structure -->
<div id="modalGuestAdd" class="modal modal-fixed-footer">
  <div class="modal-content">
    <h5>Whoa! This feature is for logged in users only.</h5>
    <p>If you want to add a trail, that's great! But you are gunna need to login!</p>
  </div>
  <div class="modal-footer">
    <a href="#!" class="modal-action modal-close waves-effect waves-red btn-flat ">Dismiss</a>
    <a href="#!" id="requestLogin" class="modal-action modal-close waves-effect waves-green btn-flat ">Login</a>
  </div>
</div>

<!--modal for branding page-->
    <div id="brandingmodal" class="modal bottom-sheet">
            <div class="slideshow-container">
        <div class="mySlides fade">
          <img src="/img/branding_1.jpg" style="width:100%; height: 100%">
          <div class="text">Find a trail to hike</div>
        </div>

        <div class="mySlides fade">
          <div class="text">Record your trail</div>
          <img src="/img/branding_2.jpg" style="width:100%;height: 100%">
          
        </div>

        <div class="mySlides fade">
        
        <video controls muted style="width:100%;height: 100%">
              <source src="/img/video.mp4" type="video/mp4">
            
        </video>
        <div align="center" style="margin-top: 5px">
          <a class="btn-large waves-effect waves-light red" id= "branding">Start Now</a>
        </div>
        </div>

        <a class="prev" onclick="plusSlides(-1)">&#10094;</a>
        <a class="next" onclick="plusSlides(1)">&#10095;</a>
      </div>
      <br>

      <div style="text-align:center">
        <span class="dot" onclick="currentSlide(1)"></span> 
        <span class="dot" onclick="currentSlide(2)"></span> 
        <span class="dot" onclick="currentSlide(3)"></span> 
      </div>
    </div>



<!-- *******************************************************************

A/B TESTING IS BELOW FOR THE REGISTER AND LOGIN BUTTONS


******************************************************************* -->




<!-- 
    A/B Testing:
    A: Register button is the register button as written first.
    B: Combine the Login and Register Button. Add error prevention. 
  -->
  <!-- Modal for Login -->

  <div id="loginmodal" class="modal bottom-sheet">

    <div id="logincontent" class="modal-content">
      <div class="container">
        <form id="auth_pw" role="form" method="get" action="/createMyProfile" onsubmit="return validate_form(this)">
          <h5>Login to HighQu</h3>
            <div class="input-field col s7">
              <input id="username" type="text" class="validate" name="username">
              <label for="user_name" >Username</label>
            </div>

            <div class="input-field col s6">
              <input id="pw" type="password" class="validate" name="pw">
              <label for="pw">Password</label>
            </div>
            <input type="submit" id="login" class="waves-effect waves-light btn" value="Login"></input>

            <div> <h1> </h1> </div>
            <div><p> </p></div>
            <div><p> </p></div>
            <div><p> </p></div>

            <h6>No account yet? Register! {{#if showDefault}}Just trying us out? If you'd like, you can just...<a href="#!" class = "guest" >Continue as Guest</a>{{/if}}</h6>
            <a id="register" class="waves-effect waves-light btn">Register</a>
          </form>
        </div>
    </div>
  </div>



    <!-- Modal for Register -->
    <div id="registermodal" class="modal bottom-sheet">
      <div id="registercontent" class="modal-content">

        <a id="toLoginModal" class="waves-effect waves-light btn">Back to Login</a>
        <p> </p>
        <h4>Register:</h4>

        <div class="container">
          <form id="auth_pw2" role="form" method="get" action="/createMyProfile" onsubmit="return validate_form_register(this)">
            <div class="input-field col s7">
              <input id="user_name_reg" type="text" class="validate" name="username">
              <label for="user_name_reg" >Username</label>
            </div>

            <div class="input-field col s6">
              <input id="pw_reg" type="password" class="validate" name="pw_reg">
              <label for="pw_reg">Type Password</label>

            </div>

            <div class="input-field col s6">
              <input id="pw2_reg" type="password" class="validate" name="pw2_reg">
              <label for="pw2_reg">Confirm Password</label>
            </div>
            <input  type="submit" id="registerUser" class="waves-effect waves-light btn" value="Register" onclick="ga('send', 'event', 'Register', 'On Login Page');"></input>
            {{#if showDefault}} <h6>Just trying us out? If you'd like, you can just...<a href="#!" class = "guest" >Continue as Guest</a></h6>{{/if}}
            
          </form>
        </div>
      </div>
    </div>



<script src="https://www.gstatic.com/firebasejs/3.7.0/firebase.js"></script>
<script>
  // Initialize Firebase
  var config = {
    apiKey: "AIzaSyC6nu935tVcRbqEPcJpQTTLDVICv1TUVjo",
    authDomain: "cse170project-f5bb6.firebaseapp.com",
    databaseURL: "https://cse170project-f5bb6.firebaseio.com",
    storageBucket: "cse170project-f5bb6.appspot.com",
    messagingSenderId: "306370954797"
  };
  firebase.initializeApp(config);
</script>




    <script src="https://code.jquery.com/jquery-2.1.1.min.js"></script>
    <script src="/js/materialize.js"></script>
    <script src="/js/init.js"></script>


    <!--***********   JAVASCRIPT CODE   ************** -->


    <script>

  // This example adds a search box to a map, using the Google Place Autocomplete
  // feature. People can enter geographical searches. The search box will return a
  // pick list containing a mix of places and predicted search terms.

  // This example requires the Places library. Include the libraries=places
  // parameter when you first load the API. For example:
  // <script src="https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY&libraries=places">

  function initAutocomplete() {
    var map = new google.maps.Map(document.getElementById('map'), {
      center: {lat: -33.8688, lng: 151.2195},
      zoom: 14,
      mapTypeId: 'roadmap'
    });

    var mappreview = new google.maps.Map(document.getElementById('map2'), {
     center: {lat: -33.8688, lng: 151.2195},
     zoom: 12,
     mapTypeId: 'roadmap'
   });
      
    



    /** Get current location here **/
    var infoWindow = new google.maps.InfoWindow({map: map});

  // Try HTML5 geolocation.
  if (navigator.geolocation) {
    navigator.geolocation.getCurrentPosition(function(position) {
      var pos = {
        lat: position.coords.latitude,
        lng: position.coords.longitude
      };

      infoWindow.setPosition(pos);
      infoWindow.setContent('Your Current Location');
      map.setCenter(pos);
      mappreview.setCenter(pos);

    }, function() {
      handleLocationError(true, infoWindow, map.getCenter());
    });
  } else {
  // Browser doesn't support Geolocation
  handleLocationError(false, infoWindow, map.getCenter());
}


/** Get searchbar here */

// Create the search box and link it to the UI element.
var input = document.getElementById('search');
var searchBox = new google.maps.places.SearchBox(input);

// Bias the SearchBox results towards current map's viewport.
map.addListener('bounds_changed', function() {
  searchBox.setBounds(map.getBounds());
});



/** Add the MyLocation button here **/
setTimeout(function(){
  $(".pac-container").append('<div id="mylocation" class="pac-item areasearch" onmousedown="modifyMap()"><span class="pac-icon pac-icon-areas"></span><span class="pac-item-query"><span class="pac-matched"></span><b>Current Location</b></span> <span></span></div>');
}, 500);


/** Add a new event listener for My Location clicks **/
document.addEventListener("myLocationClicked", myLocationClicked, false);


function myLocationClicked(){

 if (navigator.geolocation) {
  navigator.geolocation.getCurrentPosition(function(position) {
    var pos = {
      lat: position.coords.latitude,
      lng: position.coords.longitude
    };

    infoWindow.setPosition(pos);
    infoWindow.setContent('Your Current Location.');
    map.setCenter(pos);
  }, function() {
    handleLocationError(true, infoWindow, map.getCenter());
  });
} else {
  // Browser doesn't support Geolocation
  handleLocationError(false, infoWindow, map.getCenter());
}
}





$.get("/loadTrailsWithData", addTrail);

function addTrail(result){
  var list_of_trails = result;
  console.log(list_of_trails);

  for(var i = 0; i < list_of_trails.length; i++)
  {
   var the_trail = list_of_trails[i];
   var name = the_trail.name;
   var difficulty = the_trail.difficulty; 
   var description = the_trail.description; 
   var trail = the_trail.trail;

   var contentString = '<div id="content">'+
   '<div id="siteNotice">'+
   '</div>'+
   '<h5 id="firstHeading" class="firstHeading">'+name+'</h5>'+
   '<div id="bodyContent">'+
   '<p><b>Description: </b><br>'+description+'<br></p>'+
   '<p><b>Difficulty: <br></b>'+difficulty+'</p>'+
   '<p><a class="linkformap" href="#trailinfo">Read More About Trail</a></p>'+
   '</div>'+
   '</div>';

   console.log(description);
   var marker = new google.maps.Marker({
    position: new google.maps.LatLng(trail[0].lat, trail[0].lng),
    map: map,
    title:name,
    html: contentString,
  });

   console.log(name);
   console.log("the description " +description);
   marker.trail_name =  name;
   marker.trail_description =  description;
   marker.difficulty = difficulty;
   marker.id = the_trail.id;
   marker.trail = trail;

   google.maps.event.addListener(marker, 'click', (function (marker, i) {
    var infowindow = new google.maps.InfoWindow();
    google.maps.event.trigger(map, 'resize');



    return function () {

      mappreview.setCenter(new google.maps.LatLng(this.trail[0].lat, this.trail[0].lng));

      var id_for_review = this.id;
      $.get("/getReview/"+this.id, addReviews);
      function addReviews(results){
       console.log("The length " + results.length);
       var toAdd = "<li class=\"collection-item\"><span class=\"title\"></span><br><a class=\"reviews\" href=\"/review/A?id="+id_for_review+"\"><b>Add your review here!</b></a></li>";
       $("#reviews").append(toAdd);
       if(window.sessionStorage.username == "Guest User"){
        $(".reviews").attr("href", "#!");
        console.log("The href " + $(".reviews").attr("href"));

        $(".reviews").on("click", function(){
          $('#loginmodal').modal('open');

        });
        
      }


      for(var j = 0; j <results.length; j++){
       var toAdd = "<li class=\"collection-item\"><span class=\"title\">Difficulty: "+results[j].difficulty+"</span><p><b>Comment: </b> "+results[j].comment+"<br><b>Playlist Recommandations:</b> "+results[j].musicText+"<br><b>Warnings: </b> "+results[j].warningText+"</p></li>";
       $("#reviews").append(toAdd);
     }

   }

   $("#trailname").text(this.trail_name);
   $("#traildescription").text(this.trail_description);
   $("#HikeTrailButton").attr("href", "/HikeTrail/" + this.id);
   $("#traildifficulty").text(this.difficulty);

//CODE FOR FAVORITE
var temp_id = this.id;
var temp_name = this.trail_name;
var temp_description = this.trail_description;
var temp_difficulty = this.difficulty;
$("#favoriting_the_trail").on("click", function() { 

  $.get("/favs/" + temp_id + "/" + temp_name + "/" + temp_description + "/" + temp_difficulty, 
    function() {console.log();} /** TODO */ );  
            // Just got the IDs
            //alert("Fav saved.");
            toast("Fav saved")
            console.log("Fav Saved.");
          }
          );



infowindow.setContent( this.html);
infowindow.open(map, this);

polyline = new google.maps.Polyline({
  strokeColor: '#000000',
  strokeOpacity: 1.0,
  strokeWeight: 3
});
polyline.setMap(mappreview);
var the_trail_to_add = this.trail;
for(var j = 0; j < the_trail_to_add.length; j++){
  var path = polyline.getPath();
  path.push(new google.maps.LatLng(the_trail_to_add[j].lat, the_trail_to_add[j].lng));
}



}



})(marker, i)); 

 }


}






var markers = [];
// Listen for the event fired when the user selects a prediction and retrieve
// more details for that place.
searchBox.addListener('places_changed', function() {
  var places = searchBox.getPlaces();
  if (places.length == 0) {
    return;
  }

  // Clear out the old markers.
  markers.forEach(function(marker) {
    marker.setMap(null);
  });
  markers = [];

  // For each place, get the icon, name and location.
  var bounds = new google.maps.LatLngBounds();
  places.forEach(function(place) {
    if (!place.geometry) {
      console.log("Returned place contains no geometry");
      return;
    }
    var icon = {
      url: place.icon,
      size: new google.maps.Size(71, 71),
      origin: new google.maps.Point(0, 0),
      anchor: new google.maps.Point(17, 34),
      scaledSize: new google.maps.Size(25, 25)
    };

    // Create a marker for each place.
    markers.push(new google.maps.Marker({
      map: map,
      icon: icon,
      title: place.name,
      position: place.geometry.location
    }));

    if (place.geometry.viewport) {
      // Only geocodes have viewport.
      bounds.union(place.geometry.viewport);
    } else {
      bounds.extend(place.geometry.location);
    }
  });
  map.fitBounds(bounds);
});
}

</script>
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBaZLZeh94-eXlNYVAQimvj8sEGw7xBdR8&libraries=places&callback=initAutocomplete"
async defer></script>
<script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-93049862-1', 'auto');
  ga('send', 'pageview');

</script>





<!--  Scripts-->

<script>
  var description = $('#description').val();
  $( '#submitBtn' ).click(function() {
    ('desc').text(description);
  });
  </script>

<script>
  var showTipInterval;
  $(document).ready(function(){
    $('.modal').modal();

    $('#trailinfo').modal({
dismissible: true, // Modal can be dismissed by clicking outside of the modal
opacity: .5, // Opacity of modal background
inDuration: 300, // Transition in duration
outDuration: 200, // Transition out duration
startingTop: '4%', // Starting top style attribute
endingTop: '10%', // Ending top style attribute
ready: function(modal, trigger) { // Callback for Modal open. Modal and trigger parameters available.
  window.dispatchEvent(new Event('resize'));
  $('#search').tooltip('hide');

  console.log(modal, trigger);
},
complete: function() { } // Callback for Modal close
}
);
    $('#search').val('Current Location');
    $("#search").trigger('mouseenter');
    


    if(!window.sessionStorage.getItem("username"))
    {
      $('#search').tooltip('hide');
      console.log("hahahaha");
      $('#brandingmodal').modal('open');
      //window.open('brandingPage');
    }
    else{
      console.log(window.sessionStorage.username);
      $("#profile_user_name").text(window.sessionStorage.username);

    }
    
    var numOfClicksOnRegister = 0;
    function needPwMatch(){
            if(numOfClicksOnRegister <1){
                Materialize.toast("Passwords Must Match!", 8000,'rounded');
            }
            numOfClicksOnRegister++;

        }
    
  function findUser(){
        var usersRef = firebase.database().refFromURL("https://cse170project-f5bb6.firebaseio.com/users");
        var username = $("#user_name_reg").val();
        usersRef.child(username).once('value', function(snapshot) {
            var exists = (snapshot.val() !== null);
            userExistsCallback(exists);
        });
  }
      
   function userExistsCallback(exists){
       var userRef = firebase.database().refFromURL("https://cse170project-f5bb6.firebaseio.com/users");
       if(exists){
            Materialize.toast("Username already taken!", 8000,'rounded');
            return;
        }
       var username = $("#user_name_reg").val();
       var pw = $('#pw_reg').val();
       userRef.child(username).set({
                username: username,
                password: pw
        });
       $("#registermodal").modal('close');
       numOfClicksOnRegister = 0;
       Materialize.toast("Successfully registered as: " + username, 4000,'rounded');
       window.sessionStorage.username = username;
       $("#profile_user_name").text(window.sessionStorage.username);


   }
      
    $('#pw_reg, #pw2_reg').on('blur', function () {
        if ($('#pw').val() != $('#pw2').val()) {
             $("#registerUser").attr("type", "button"); 
        }
        else{
             $("#registerUser").attr("type", "submit");
        }
                    numOfClicksOnRegister = 0;

       
    });
      
    $("#username, #pw").on("blur", function(){
        var usersRef = firebase.database().refFromURL("https://cse170project-f5bb6.firebaseio.com/users");
        var actual_username = $("#username").val();
        var valid = true;
        usersRef.child(actual_username).once('value', function(snapshot) {
        if(snapshot.val() === null){
            $("#login").attr("type", "button"); 

        }
        else if(snapshot.val().password != $('#pw').val()){
            $("#login").attr("type", "button"); 

        }
        else{
            $("#registerUser").attr("type", "submit"); 

        }
        
        });
        
    });
    
    $("#login").on("click", function(){
        var usersRef = firebase.database().refFromURL("https://cse170project-f5bb6.firebaseio.com/users");
        var actual_username = $("#username").val();
        var valid = true;
        usersRef.child(actual_username).once('value', function(snapshot) {
        if(snapshot.val() === null){
            Materialize.toast("Username does not exist.", 8000, 'rounded');
            $("#username").focus();
            return;
        }
        if(snapshot.val().password != $("#pw").val()){
            Materialize.toast("Incorrect password.", 8000, 'rounded');
            $('#pw').focus();
            return;
        }
        window.sessionStorage.username = $("#username").val();
        $("#profile_user_name").text(window.sessionStorage.username);
        $("#loginmodal").modal('close');

            

        
        });
        
    });
      
    $("#registerUser").on("click", function(){
         if ($('#pw_reg').val() != $('#pw2_reg').val()) {
             needPwMatch();
             console.log($('#pw_reg').val() +"     " + $('#pw2_reg').val())
        }
        else{
             findUser();
        }
    });
       


    
    $("#requestLogin").on("click", function(){
      $('#loginmodal').modal('open');
    });

    $(".guest").on("click", function(){
      window.sessionStorage.username = "Guest User";
      $("#profile_user_name").text(window.sessionStorage.username);
      $('#loginmodal').modal('close');
      $('#registermodal').modal('close');  
      $(".reviews").attr("href", "#!");
      console.log("The href " + $(".reviews").attr("href"));
      $(".reviews").on("click", function(){
        $('#loginmodal').modal('open');

      });

    });




    var searchBarShowInterval;
    $("#search").on("focus", function(){
      $('#search').tooltip('remove');

      function showSuggestions(){

        $(".pac-container").show();


      }
      searchBarShowInterval = setInterval(showSuggestions,10);

    });

    $("#branding").on("click", function(){
      $('#brandingmodal').modal('close'); 
      $('#loginmodal').modal('open');

    });

    $("#addbutton").on("click", function(){
      console.log(window.sessionStorage.username);
      if(window.sessionStorage.username == "Guest User"){
       $("#modalGuestAdd").modal('open');
     }
     else{
       $("#modalstart").modal('open');

     }
     $('#search').tooltip('hide');


   });
    $("#hamburger").on("click", function(){
      $('#search').tooltip('hide');   
    });

    $("#map").on("click", function(){
      $('#search').blur();   
    });

    $("#disagree").on("click", function(){
      $('#search').tooltip('show');   

      $("#search").trigger('mouseenter');
    });

    $("#logout").on("click", function(){
      sessionStorage.clear();
      location.reload();

    });

    $("#searchbarx").on("click", function(){
      $("#search").val("");
    });

    $("#register").on("click", function(){
      $('#loginmodal').modal('close');
      $('#registermodal').modal('open');
    });

    $("#toLoginModal").on("click", function(){
      $('#registermodal').modal('close');
      $('#loginmodal').modal('open');
    });






    $("#search").on("blur", function(){
      clearInterval(searchBarShowInterval);            
    });


    function modifyMap(){
      $("#search").val("Current Location");

      var myLocationClicked = new Event('myLocationClicked');
      document.dispatchEvent(myLocationClicked);


    }
  });

  function validate_required(field,alerttxt)
  {
    with (field)
    {
      if (value==null||value=="")
        {Materialize.toast(alerttxt, 8000,'rounded');return false}
//{alert(alerttxt);return false}
else {return true}
}
}

function toast(alerttxt)  {Materialize.toast(alerttxt, 8000,'rounded');return false}


function validate_form(thisform)
{
  with (thisform)
  {
    if (validate_required(username,"username must be filled out!")==false)
      {username.focus();return false}
    if (validate_required(pw,"password must be filled out!")==false)
      {pw.focus();return false}
  }
}

function validate_form_register(thisform)
{
  with (thisform)
  {
    console.log(username);
    console.log(pw.value);
    console.log(pw2.value);

    if (validate_required(username,"username must be filled out!")==false)
      {username.focus();return false}
     if (validate_required(pw,"password must be filled out!")==false)
      {pw.focus();return false}
     if (validate_required(pw2,"password confirmation must be filled out!")==false)
      {pw.focus();return false}
     if(pw.value!=pw2.value){
         pw = null;
         pw.focus();
         return false;
         validate_required(null,"Passwords must match!");
     }

      console.log(username);
      sessionStorage.username = username.value;
    
  }
    


}



</script>
<!-- for branding page -->
<script>
var slideIndex = 1;
showSlides(slideIndex);

function plusSlides(n) {
  showSlides(slideIndex += n);
}

function currentSlide(n) {
  showSlides(slideIndex = n);
}

function showSlides(n) {
  var i;
  var slides = document.getElementsByClassName("mySlides");
  var dots = document.getElementsByClassName("dot");
  /* */
  if (n > slides.length) {slideIndex = 1} 
  if (n < 1) {slideIndex = slides.length}
  for (i = 0; i < slides.length; i++) {
      slides[i].style.display = "none"; 
  }
  for (i = 0; i < dots.length; i++) {
      dots[i].className = dots[i].className.replace(" active", "");
  }
  slides[slideIndex-1].style.display = "block"; 
  dots[slideIndex-1].className += " active";
}
</script>
</body>
</html>
